---
output:
  pdf_document: default
  html_document: default
---
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(knitr)
knitr::opts_chunk$set(warning=FALSE,message = FALSE,eval=FALSE)
```
# Outline

*Basic Review on R environment
*How to connect R with plotly platform
*Data Visualization on plotly
*It's Your turn!!
*Give us some feedback

#Basic Review on R environment
```{r}
#Please open another file Introduction-to-R-Environment
```

### Clear the environment {-}
```{r}
rm(list=ls())
```

### Import Data
```{r}
data.vis.1.sa<-read.csv("./_data/data.vis.1.sa.csv")
```
`./` represents the current working directory, normally where your .Rproj file is.  
`./_data/` represents the subdirectory under './`. 

#### Check the first few lines {-}
```{r}
#請觀察每一個變數的屬性（class)
head(data.vis.1.sa)
```

#### Convert to Date class
```{r}
data.vis.1.sa$date <- as.Date(data.vis.1.sa$date)
```

```{r}
#請觀察`date`變數的變化。由<fctr>轉為<date>
head(data.vis.1.sa)
```

# How to connect R with plotly platform

## Introduction to plotly
```{r, eval=FALSE, message=FALSE, warning=FALSE}
#安裝套件
install.packages("plotly")
```

### Load plotly package
Need to do it everytime you want to use plotly.
```{r}
#把套件召喚出來
library(plotly)
```

### Initiate a plotly plot
```{r, fig.cap = "Three versions of a basic scatterplot", screenshot.alt = "screenshots/scatterplots"}

data.vis.1.sa
library(dplyr)
data.vis.1.sa %>% plot_ly(x=~date) %>%
  add_lines(y=~GDP,
            name="GDP") -> p0
p0
```

```{r}
p0 %>% add_lines(y=~C,
          name="Consumption") -> p0
p0
```

```{r}
#將Code Line 68~78合併一起寫
data.vis.1.sa %>% plot_ly(x=~date) %>%
  add_lines(y=~GDP,
            name="GDP") %>%
  add_lines(y=~C,
            name="Consumption") -> p0
p0
```

```{r}
#將資料的所有變數一起寫完
data.vis.1.sa %>% plot_ly(x=~date) %>%
  add_lines(y=~GDP,
            name="GDP") %>%
  add_lines(y=~C,
            name="Consumption") %>%
  add_lines(y=~G,
            name="Gov't Purchase") %>%
  add_lines(y=~I,
            name="Investment") %>%
  add_lines(y=~Ex,
            name="Export") %>%
  add_lines(y=~Im,
            name="Import")-> p0
p0
```

## Upload to plotly and modify in Plot.ly platform

Find your authentication API keys in your online settings. 
Save the following commands in your .Rprofile file (under your project directory) to be run every time you start R.
```
Sys.setenv("plotly_username"="大家的plotly平台使用者名稱")
Sys.setenv("plotly_api_key"="大家的API key的那一串英文與數字")
```

```{r, eval=FALSE}
#請將Code 122 123放到程式碼區塊裡面
api_create(p0,filename="taiwan real gdp SA",fileopt="overwrite")
```

# Data Visualization on plotly
In Plot.ly, you can   
- adjust your graph by clicking `edit`  
- download graph code by clicking `view`

### Basic data visualization rule
Make sure you include the following components:  
- Proper title  
- meaningful subtitle
- Data source 
- Layout should follow as Z-rule

### Plot.ly trick
You can download your designed layout from plot.ly to use in your program.
```
p0 %>% layout(

  Copy and paste the code chunck XXX from the part inside list()
of layout<-list(XXX)

)
```

```{r, echo=FALSE}
p0 %>% layout(
  annotations = list(
    list(
      x = "2017-01-01 08:00:00.13650", 
      y = 4147012.08557, 
      font = list(
        color = "rgb(31, 119, 180)", 
        size = 14
      ), 
      showarrow = FALSE, 
      text = "GDP", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = "2017-01-01", 
      y = 2014401.37845, 
      font = list(
        color = "rgb(255, 127, 14)", 
        size = 15
      ), 
      showarrow = FALSE, 
      text = "Consumption", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = "2017-01-01 08:00:00.13560", 
      y = 3203437.8329, 
      font = list(
        color = "rgb(148, 103, 189)", 
        size = 15
      ), 
      showarrow = FALSE, 
      text = "Export", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = "2017-01-01 08:00:00.13610", 
      y = 2509189.21718, 
      font = list(
        color = "rgb(140, 86, 75)", 
        size = 15
      ), 
      showarrow = FALSE, 
      text = "Import", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = "2017-01-01", 
      y = 1075946.98695, 
      font = list(
        color = "rgb(214, 39, 40)", 
        size = 15
      ), 
      showarrow = FALSE, 
      text = "Investment", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = "2017-01-01 08:00:00.1353", 
      y = 707720.937129, 
      font = list(
        color = "rgb(44, 160, 44)", 
        size = 15
      ), 
      showarrow = FALSE, 
      text = "Gov Purchase", 
      xref = "x", 
      yref = "y"
    ), 
    list(
      x = 0.5, 
      y = 1.03007518797, 
      showarrow = FALSE, 
      text = "Chained-dallor year = 2011, in NTD million, Seasonally Adjusted", 
      xref = "paper", 
      yref = "paper"
    ), 
    list(
      x = 0, 
      y = -0.0892116182573, 
      showarrow = FALSE, 
      text = "Source: <a href=\"data.gov.tw\">Taiwan Open Data</a>", 
      xanchor = "left", 
      xref = "paper", 
      yref = "paper"
    )
  ), 
  dragmode = "zoom", 
  hovermode = "closest", 
  margin = list(
    r = 80, 
    t = 55, 
    b = 90, 
    l = 60
  ), 
  showlegend = FALSE, 
  title = "Taiwan Real GDP and its Components", 
  xaxis = list(
    autorange = TRUE, 
    categoryarraysrc = "tpemartin:82:10f067", 
    categoryorder = "array", 
    domain = c(0, 1), 
    nticks = 9, 
    range = c("1982-01-01", "2018-11-22 15:10:14.3975"), 
    showgrid = FALSE, 
    showline = FALSE, 
    showspikes = FALSE, 
    tickmode = "auto", 
    title = "<br>", 
    type = "date", 
    zerolinewidth = 1
  ), 
  yaxis = list(
    autorange = TRUE, 
    domain = c(0, 1), 
    range = c(-59416.6666667, 4251896.66667), 
    showgrid = TRUE, 
    showspikes = FALSE, 
    side = "right", 
    title = "<br>", 
    type = "linear"
  )

)
```

# It's Your turn!!
```{r}
#說明：
#資料來源：政府開放資料平台
#家庭收支調查-各縣市別平均每戶所得收入總計（從1998~2016）
#請挑選Taiwan / 你的故鄉 / 兩個你感興趣的縣市 進行實作
#感受一下各縣市的落差和逐年的變化
#然後說個50～100字的視覺化idea
#提示：可以模仿上述的程式碼

library(plotly)
data.vis.2 <- read.csv("./_data/Income_in_household_on_average_in_separate_years_in_different_County:City.csv")
data.vis.2

data.vis.2 %>% plot_ly(x=~Year, y=~Income_in_Household) %>% 
  add_lines(y=~Taiwan/Taiwan, name="Taiwan") %>%
  add_lines(y=~Taipei_City/Taiwan, name="Taipei_City") %>%
  add_lines(y=~New_Taipei_City/Taiwan, name="New_Taipei_City") %>%
  add_lines(y=~Chiayi.City/Taiwan, name="Chiayi.City") -> q0
q0

Sys.setenv("plotly_username"="PoMingChen")
Sys.setenv("plotly_api_key"="wjzSFQxNi0HnTTBfdpWn")
api_create(q0,filename="Income in Household in County:City",fileopt="overwrite")

#你就畫兩張一張ratio
#到時候現場開分身show一下我自己的idea，我要用ratio
#研究一下平台上（和電子書）有沒有最適合畫這種圖的

```

#Give us some feedback
```{r}
#Please open the questionnaire and further materials file
```


